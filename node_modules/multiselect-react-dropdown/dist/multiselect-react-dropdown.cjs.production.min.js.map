{"version":3,"file":"multiselect-react-dropdown.cjs.production.min.js","sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/multiselect/multiselect.component.tsx"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","// @ts-nocheck\nimport React, { useRef, useEffect } from \"react\";\nimport \"./styles.css\";\nimport CloseCircle from '../assets/svg/closeCircle.svg';\nimport CloseCircleDark from '../assets/svg/closeCircleDark.svg';\nimport CloseLine from '../assets/svg/closeLine.svg';\nimport CloseSquare from '../assets/svg/closeSquare.svg';\nimport DownArrow from '../assets/svg/downArrow.svg';\nimport {IMultiselectProps} from \"./interface\";\n\nconst closeIconTypes = {\n  circle: CloseCircleDark,\n  circle2: CloseCircle,\n  close: CloseSquare,\n  cancel: CloseLine\n};\n\nfunction useOutsideAlerter(ref, clickEvent) {\n  useEffect(() => {\n      function handleClickOutside(event) {\n          if (ref.current && !ref.current.contains(event.target)) {\n            clickEvent();\n          }\n      }\n\n      document.addEventListener(\"mousedown\", handleClickOutside);\n      return () => {\n          document.removeEventListener(\"mousedown\", handleClickOutside);\n      };\n  }, [ref]);\n}\n\n/**\n* Component that alerts if you click outside of it\n*/\nfunction OutsideAlerter(props) {\n  const wrapperRef = useRef(null);\n  useOutsideAlerter(wrapperRef, props.outsideClick);\n  return <div ref={wrapperRef}>{props.children}</div>;\n}\n\nexport class Multiselect extends React.Component<IMultiselectProps, any> {\n  static defaultProps: { customArrow: any; className: string; options: never[]; disablePreSelectedValues: boolean; selectedValues: never[]; isObject: boolean; displayValue: string; showCheckbox: boolean; selectionLimit: number; placeholder: string; groupBy: string; style: {}; emptyRecordMsg: string; onSelect: () => void; onRemove: () => void;onKeyPressFn: ()=>void; closeIcon: string; singleSelect: boolean; caseSensitiveSearch: boolean; id: string; name: string; closeOnSelect: boolean; avoidHighlightFirstOption: boolean; hidePlaceholder: boolean; showArrow: boolean; keepSearchTerm: boolean; disable: boolean };\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputValue: \"\",\n      options: props.options,\n      filteredOptions: props.options,\n      unfilteredOptions: props.options,\n      selectedValues: Object.assign([], props.selectedValues),\n      preSelectedValues: Object.assign([], props.selectedValues),\n      toggleOptionsList: false,\n      highlightOption: props.avoidHighlightFirstOption ? -1 : 0,\n\t\t\tshowCheckbox: props.showCheckbox,\n      keepSearchTerm: props.keepSearchTerm,\n      groupedObject: [],\n      closeIconType: closeIconTypes[props.closeIcon] || closeIconTypes['circle']\n    };\n    // @ts-ignore\n    this.optionTimeout = null;\n    // @ts-ignore\n\t\tthis.searchWrapper = React.createRef();\n    // @ts-ignore\n\t\tthis.searchBox = React.createRef();\n    this.onChange = this.onChange.bind(this);\n    this.onKeyPress = this.onKeyPress.bind(this);\n    this.onFocus = this.onFocus.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n    this.renderMultiselectContainer = this.renderMultiselectContainer.bind(this);\n    this.renderSelectedList = this.renderSelectedList.bind(this);\n    this.onRemoveSelectedItem = this.onRemoveSelectedItem.bind(this);\n    this.toggelOptionList = this.toggelOptionList.bind(this);\n    this.onArrowKeyNavigation = this.onArrowKeyNavigation.bind(this);\n    this.onSelectItem = this.onSelectItem.bind(this);\n    this.filterOptionsByInput = this.filterOptionsByInput.bind(this);\n    this.removeSelectedValuesFromOptions = this.removeSelectedValuesFromOptions.bind(this);\n    this.isSelectedValue = this.isSelectedValue.bind(this);\n    this.fadeOutSelection = this.fadeOutSelection.bind(this);\n    this.isDisablePreSelectedValues = this.isDisablePreSelectedValues.bind(this);\n    this.renderGroupByOptions = this.renderGroupByOptions.bind(this);\n    this.renderNormalOption = this.renderNormalOption.bind(this);\n    this.listenerCallback = this.listenerCallback.bind(this);\n    this.resetSelectedValues = this.resetSelectedValues.bind(this);\n    this.getSelectedItems = this.getSelectedItems.bind(this);\n    this.getSelectedItemsCount = this.getSelectedItemsCount.bind(this);\n    this.hideOnClickOutside = this.hideOnClickOutside.bind(this);\n    this.onCloseOptionList = this.onCloseOptionList.bind(this);\n    this.isVisible = this.isVisible.bind(this);\n  }\n\n  initialSetValue() {\n    const { showCheckbox, groupBy, singleSelect } = this.props;\n\t\tconst { options } = this.state;\n    if (!showCheckbox && !singleSelect) {\n      this.removeSelectedValuesFromOptions(false);\n\t\t}\n    // if (singleSelect) {\n    //   this.hideOnClickOutside();\n    // }\n\t\tif (groupBy) {\n\t\t\tthis.groupByOptions(options);\n\t\t}\n  }\n\n  resetSelectedValues() {\n    const { unfilteredOptions } = this.state;\n    return new Promise((resolve) => {\n      this.setState({\n        selectedValues: [],\n        preSelectedValues: [],\n        options: unfilteredOptions,\n        filteredOptions: unfilteredOptions\n      }, () => {\n        // @ts-ignore\n        resolve();\n        this.initialSetValue();\n      });\n    });\n  }\n\n  getSelectedItems() {\n    return this.state.selectedValues;\n  }\n\n  getSelectedItemsCount() {\n    return this.state.selectedValues.length;\n  }\n\n  componentDidMount() {\n\t\tthis.initialSetValue();\n    // @ts-ignore\n    this.searchWrapper.current.addEventListener(\"click\", this.listenerCallback);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { options, selectedValues } = this.props;\n    const { options: prevOptions, selectedValues: prevSelectedvalues } = prevProps;\n    if (JSON.stringify(prevOptions) !== JSON.stringify(options)) {\n      this.setState({ options, filteredOptions: options, unfilteredOptions: options }, this.initialSetValue);\n    }\n    if (JSON.stringify(prevSelectedvalues) !== JSON.stringify(selectedValues)) {\n      this.setState({ selectedValues: Object.assign([], selectedValues), preSelectedValues: Object.assign([], selectedValues) }, this.initialSetValue);\n    }\n  }\n\n  listenerCallback() {\n    // @ts-ignore\n    this.searchBox.current.focus();\n  }\n\n  componentWillUnmount() {\n    // @ts-ignore\n    if (this.optionTimeout) {\n      // @ts-ignore\n      clearTimeout(this.optionTimeout);\n    }\n    // @ts-ignore\n    this.searchWrapper.current.removeEventListener('click', this.listenerCallback);\n  }\n\n  // Skipcheck flag - value will be true when the func called from on deselect anything.\n  removeSelectedValuesFromOptions(skipCheck) {\n    const { isObject, displayValue, groupBy } = this.props;\n    const { selectedValues = [], unfilteredOptions, options } = this.state;\n    if (!skipCheck && groupBy) {\n      this.groupByOptions(options);\n    }\n    if (!selectedValues.length && !skipCheck) {\n      return;\n    }\n    if (isObject) {\n      let optionList = unfilteredOptions.filter(item => {\n        return selectedValues.findIndex(\n          v => v[displayValue] === item[displayValue]\n        ) === -1\n          ? true\n          : false;\n      });\n      if (groupBy) {\n        this.groupByOptions(optionList);\n      }\n      this.setState(\n        { options: optionList, filteredOptions: optionList },\n        this.filterOptionsByInput\n      );\n      return;\n    }\n    let optionList = unfilteredOptions.filter(\n      item => selectedValues.indexOf(item) === -1\n    );\n\n    this.setState(\n      { options: optionList, filteredOptions: optionList },\n      this.filterOptionsByInput\n    );\n  }\n\n  groupByOptions(options) {\n    const { groupBy } = this.props;\n    const groupedObject = options.reduce(function(r, a) {\n      const key = a[groupBy] || \"Others\";\n      r[key] = r[key] || [];\n      r[key].push(a);\n      return r;\n    }, Object.create({}));\n\n    this.setState({ groupedObject });\n  }\n\n  onChange(event) {\n    const { onSearch } = this.props;\n    this.setState(\n      { inputValue: event.target.value },\n      this.filterOptionsByInput\n    );\n    if (onSearch) {\n      onSearch(event.target.value);\n    }\n  }\n\n  onKeyPress(event) {\n    const { onKeyPressFn } = this.props;\n    if (onKeyPressFn) {\n        onKeyPressFn(event, event.target.value);\n    }\n  }\n\n  filterOptionsByInput() {\n    let { options, filteredOptions, inputValue } = this.state;\n    const { isObject, displayValue } = this.props;\n    if (isObject) {\n      options = filteredOptions.filter(i => this.matchValues(i[displayValue], inputValue))\n    } else {\n      options = filteredOptions.filter(i => this.matchValues(i, inputValue));\n    }\n    this.groupByOptions(options);\n    this.setState({ options });\n  }\n\n  matchValues(value, search) {\n    if (this.props.caseSensitiveSearch) {\n      return value.indexOf(search) > -1;\n    }\n    if (value.toLowerCase) {\n      return value.toLowerCase().indexOf(search.toLowerCase()) > -1;\n    }\n    return value.toString().indexOf(search) > -1;\n  }\n\n  onArrowKeyNavigation(e) {\n    const {\n      options,\n      highlightOption,\n      toggleOptionsList,\n      inputValue,\n      selectedValues\n    } = this.state;\n    const { disablePreSelectedValues } = this.props;\n    if (e.keyCode === 8 && !inputValue && !disablePreSelectedValues && selectedValues.length) {\n      this.onRemoveSelectedItem(selectedValues.length - 1);\n    }\n    if (!options.length) {\n      return;\n    }\n    if (e.keyCode === 38) {\n      if (highlightOption > 0) {\n        this.setState(previousState => ({\n          highlightOption: previousState.highlightOption - 1\n        }));\n      } else {\n        this.setState({ highlightOption: options.length - 1 });\n      }\n    } else if (e.keyCode === 40) {\n      if (highlightOption < options.length - 1) {\n        this.setState(previousState => ({\n          highlightOption: previousState.highlightOption + 1\n        }));\n      } else {\n        this.setState({ highlightOption: 0 });\n      }\n    } else if (e.key === \"Enter\" && options.length && toggleOptionsList) {\n      if (highlightOption === -1) {\n        return;\n      }\n      this.onSelectItem(options[highlightOption]);\n    }\n    // TODO: Instead of scrollIntoView need to find better soln for scroll the dropwdown container.\n    // setTimeout(() => {\n    //   const element = document.querySelector(\"ul.optionContainer .highlight\");\n    //   if (element) {\n    //     element.scrollIntoView();\n    //   }\n    // });\n  }\n\n  onRemoveSelectedItem(item) {\n\t\tlet { selectedValues, index = 0 } = this.state;\n\t\tconst { onRemove, showCheckbox, displayValue, isObject } = this.props;\n    if (isObject) {\n      index = selectedValues.findIndex(\n        i => i[displayValue] === item[displayValue]\n      );\n    } else {\n      index = selectedValues.indexOf(item);\n    }\n\t\tselectedValues.splice(index, 1);\n\t\tonRemove(selectedValues, item);\n    this.setState({ selectedValues }, () => {\n      if (!showCheckbox) {\n\t\t\t\tthis.removeSelectedValuesFromOptions(true);\n      }\n    });\n    if (!this.props.closeOnSelect) {\n      // @ts-ignore\n      this.searchBox.current.focus();\n    }\n  }\n\n  onSelectItem(item) {\n    const { selectedValues } = this.state;\n    const { selectionLimit, onSelect, singleSelect, showCheckbox } = this.props;\n    if (!this.state.keepSearchTerm){\n      this.setState({\n        inputValue: ''\n      });\n    }\n    if (singleSelect) {\n      this.onSingleSelect(item);\n      onSelect([item], item);\n      return;\n    }\n    if (this.isSelectedValue(item)) {\n      this.onRemoveSelectedItem(item);\n      return;\n    }\n    if (selectionLimit == selectedValues.length) {\n      return;\n    }\n\t\tselectedValues.push(item);\n\t\tonSelect(selectedValues, item);\n    this.setState({ selectedValues }, () => {\n      if (!showCheckbox) {\n\t\t\t\tthis.removeSelectedValuesFromOptions(true);\n      } else {\n        this.filterOptionsByInput();\n      }\n    });\n    if (!this.props.closeOnSelect) {\n      // @ts-ignore\n      this.searchBox.current.focus();\n    }\n  }\n\n  onSingleSelect(item) {\n    this.setState({ selectedValues: [item], toggleOptionsList: false });\n  }\n\n  isSelectedValue(item) {\n    const { isObject, displayValue } = this.props;\n    const { selectedValues } = this.state;\n    if (isObject) {\n      return (\n        selectedValues.filter(i => i[displayValue] === item[displayValue])\n          .length > 0\n      );\n    }\n    return selectedValues.filter(i => i === item).length > 0;\n  }\n\n  renderOptionList() {\n    const { groupBy, style, emptyRecordMsg, loading, loadingMessage = 'loading...' } = this.props;\n    const { options } = this.state;\n    if (loading) {\n      return (\n        <ul className={`optionContainer`} style={style['optionContainer']}>\n          {typeof loadingMessage === 'string' && <span style={style['loadingMessage']} className={`notFound`}>{loadingMessage}</span>}\n          {typeof loadingMessage !== 'string' && loadingMessage}\n        </ul>\n      );\n    }\n    return (\n      <ul className={`optionContainer`} style={style['optionContainer']}>\n        {options.length === 0 && <span style={style['notFound']} className={`notFound`}>{emptyRecordMsg}</span>}\n        {!groupBy ? this.renderNormalOption() : this.renderGroupByOptions()}\n      </ul>\n    );\n  }\n\n  renderGroupByOptions() {\n    const { isObject = false, displayValue, showCheckbox, style, singleSelect } = this.props;\n    const { groupedObject } = this.state;\n    return Object.keys(groupedObject).map(obj => {\n\t\t\treturn (\n\t\t\t\t<React.Fragment key={obj}>\n\t\t\t\t\t<li className=\"groupHeading\" style={style['groupHeading']}>{obj}</li>\n\t\t\t\t\t{groupedObject[obj].map((option, i) => {\n            const isSelected = this.isSelectedValue(option);\n            return (\n              <li\n                key={`option${i}`}\n                style={style['option']}\n                className={`groupChildEle option ${isSelected ? 'selected' : ''} ${this.fadeOutSelection(option) ? 'disableSelection' : ''} ${this.isDisablePreSelectedValues(option) ? 'disableSelection' : ''}`}\n                onClick={() => this.onSelectItem(option)}\n              >\n                {showCheckbox && !singleSelect && (\n                    <input\n                      type=\"checkbox\"\n                      className={'checkbox'}\n                      readOnly\n                      checked={isSelected}\n                    />\n                )}\n                {isObject ? option[displayValue] : (option || '').toString()}\n              </li>\n            )}\n          )}\n\t\t\t\t</React.Fragment>\n\t\t\t)\n\t\t});\n  }\n\n  renderNormalOption() {\n    const { isObject = false, displayValue, showCheckbox, style, singleSelect } = this.props;\n    const { highlightOption } = this.state;\n    return this.state.options.map((option, i) => {\n        const isSelected = this.isSelectedValue(option);\n        return (\n          <li\n            key={`option${i}`}\n            style={style['option']}\n            className={`option ${isSelected ? 'selected' : ''} ${highlightOption === i ? `highlightOption highlight` : \"\"} ${this.fadeOutSelection(option) ? 'disableSelection' : ''} ${this.isDisablePreSelectedValues(option) ? 'disableSelection' : ''}`}\n            onClick={() => this.onSelectItem(option)}\n          >\n            {showCheckbox && !singleSelect && (\n              <input\n                type=\"checkbox\"\n                readOnly\n                className={`checkbox`}\n                checked={isSelected}\n              />\n            )}\n            {isObject ? option[displayValue] : (option || '').toString()}\n          </li>\n      )\n    });\n  }\n\n  renderSelectedList() {\n    const { isObject = false, displayValue, style, singleSelect, customCloseIcon } = this.props;\n    const { selectedValues, closeIconType } = this.state;\n    return selectedValues.map((value, index) => (\n      <span className={`chip  ${singleSelect && 'singleChip'} ${this.isDisablePreSelectedValues(value) && 'disableSelection'}`} key={index} style={style['chips']}>\n        {!isObject ? (value || '').toString() : value[displayValue]}\n        {!this.isDisablePreSelectedValues(value) && (!customCloseIcon ? <img\n          className=\"icon_cancel closeIcon\"\n          src={closeIconType}\n          onClick={() => this.onRemoveSelectedItem(value)}\n        /> : <i className=\"custom-close\" onClick={() => this.onRemoveSelectedItem(value)}>{customCloseIcon}</i>)}\n      </span>\n    ));\n  }\n\n  isDisablePreSelectedValues(value) {\n    const { isObject, disablePreSelectedValues, displayValue } = this.props;\n    const { preSelectedValues } = this.state;\n    if (!disablePreSelectedValues || !preSelectedValues.length) {\n      return false;\n    }\n    if (isObject) {\n      return (\n        preSelectedValues.filter(i => i[displayValue] === value[displayValue])\n          .length > 0\n      );\n    }\n    return preSelectedValues.filter(i => i === value).length > 0;\n  }\n\n  fadeOutSelection(item) {\n    const { selectionLimit, showCheckbox, singleSelect } = this.props;\n    if (singleSelect) {\n      return;\n    }\n    const { selectedValues } = this.state;\n    if (selectionLimit == -1) {\n      return false;\n    }\n    if (selectionLimit != selectedValues.length) {\n      return false;\n    }\n    if (selectionLimit == selectedValues.length) {\n      if (!showCheckbox) {\n        return true;\n      } else {\n        if (this.isSelectedValue(item)) {\n          return false;\n        }\n        return true;\n      }\n    }\n  }\n\n  toggelOptionList() {\n    this.setState({\n      toggleOptionsList: !this.state.toggleOptionsList,\n      highlightOption: this.props.avoidHighlightFirstOption ? -1 : 0\n    });\n  }\n\n  onCloseOptionList() {\n    this.setState({\n      toggleOptionsList: false,\n      highlightOption: this.props.avoidHighlightFirstOption ? -1 : 0,\n      inputValue: ''\n    });\n  }\n\n  onFocus(){\n    if (this.state.toggleOptionsList) {\n      // @ts-ignore\n      clearTimeout(this.optionTimeout);\n    } else {\n      this.toggelOptionList();\n    }\n  }\n\n  onBlur(){\n    this.setState({ inputValue: '' }, this.filterOptionsByInput);\n    // @ts-ignore\n    this.optionTimeout = setTimeout(this.onCloseOptionList, 250);\n  }\n\n  isVisible(elem) {\n    return !!elem && !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length )\n  }\n\n  hideOnClickOutside() {\n    const element = document.getElementsByClassName('multiselect-container')[0];\n    const outsideClickListener = event => {\n        if (element && !element.contains(event.target) && this.isVisible(element)) {\n          this.toggelOptionList();\n        }\n    }\n    document.addEventListener('click', outsideClickListener)\n  }\n\n  renderMultiselectContainer() {\n    const { inputValue, toggleOptionsList, selectedValues } = this.state;\n    const { placeholder, style, singleSelect, id, name, hidePlaceholder, disable, showArrow, className, customArrow } = this.props;\n    return (\n      <div className={`multiselect-container multiSelectContainer ${disable ? `disable_ms` : ''} ${className || ''}`} id={id || 'multiselectContainerReact'} style={style['multiselectContainer']}>\n        <div className={`search-wrapper searchWrapper ${singleSelect ? 'singleSelect' : ''}`}\n          ref={this.searchWrapper} style={style['searchBox']}\n          onClick={singleSelect ? this.toggelOptionList : () => {}}\n        >\n          {this.renderSelectedList()}\n          <input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tref={this.searchBox}\n            className={`searchBox ${singleSelect && selectedValues.length ? 'display-none' : ''}`}\n            id={`${id || 'search'}_input`}\n\t          name={`${name || 'search_name'}_input`}\n            onChange={this.onChange}\n            onKeyPress={this.onKeyPress}\n            value={inputValue}\n            onFocus={this.onFocus}\n            onBlur={this.onBlur}\n            placeholder={((singleSelect && selectedValues.length) || (hidePlaceholder && selectedValues.length)) ? '' : placeholder}\n            onKeyDown={this.onArrowKeyNavigation}\n            style={style['inputField']}\n            autoComplete=\"off\"\n            disabled={singleSelect || disable}\n          />\n          {(singleSelect || showArrow) && (\n            <>\n              {customArrow ? <span className=\"icon_down_dir\">{customArrow}</span> : <img src={DownArrow} className={`icon_cancel icon_down_dir`} />}\n            </>\n          )}\n        </div>\n        <div\n          className={`optionListContainer ${\n            toggleOptionsList ? 'displayBlock' : 'displayNone'\n          }`}\n          onMouseDown={(e) => {\n            e.preventDefault();\n          }}\n        >\n          {this.renderOptionList()}\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <OutsideAlerter outsideClick={this.onCloseOptionList}>\n        {this.renderMultiselectContainer()}\n      </OutsideAlerter>\n    );\n  }\n}\n\nMultiselect.defaultProps = {\n  options: [],\n  disablePreSelectedValues: false,\n  selectedValues: [],\n  isObject: true,\n  displayValue: \"model\",\n  showCheckbox: false,\n  selectionLimit: -1,\n  placeholder: \"Select\",\n\tgroupBy: \"\",\n\tstyle: {},\n\temptyRecordMsg: \"No Options Available\",\n\tonSelect: () => {},\n  onRemove: () => {},\n  onKeyPressFn: () => {},\n  closeIcon: 'circle2',\n  singleSelect: false,\n  caseSensitiveSearch: false,\n  id: '',\n  name: '',\n  closeOnSelect: true,\n  avoidHighlightFirstOption: false,\n  hidePlaceholder: false,\n  showArrow: false,\n  keepSearchTerm: false,\n  customCloseIcon: '',\n  className: '',\n  customArrow: undefined\n};\n"],"names":["css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","closeIconTypes","circle","circle2","close","cancel","OutsideAlerter","props","clickEvent","wrapperRef","useRef","outsideClick","useEffect","handleClickOutside","event","current","contains","target","addEventListener","removeEventListener","React","children","Multiselect","state","inputValue","options","filteredOptions","unfilteredOptions","selectedValues","Object","assign","preSelectedValues","toggleOptionsList","highlightOption","avoidHighlightFirstOption","showCheckbox","keepSearchTerm","groupedObject","closeIconType","closeIcon","optionTimeout","searchWrapper","createRef","searchBox","onChange","_this","bind","onKeyPress","onFocus","onBlur","renderMultiselectContainer","renderSelectedList","onRemoveSelectedItem","toggelOptionList","onArrowKeyNavigation","onSelectItem","filterOptionsByInput","removeSelectedValuesFromOptions","isSelectedValue","fadeOutSelection","isDisablePreSelectedValues","renderGroupByOptions","renderNormalOption","listenerCallback","resetSelectedValues","getSelectedItems","getSelectedItemsCount","hideOnClickOutside","onCloseOptionList","isVisible","Component","this","groupBy","singleSelect","groupByOptions","Promise","resolve","_this2","setState","initialSetValue","length","prevProps","prevSelectedvalues","JSON","stringify","focus","clearTimeout","skipCheck","isObject","displayValue","optionList","filter","item","findIndex","v","indexOf","reduce","r","a","key","push","create","onSearch","value","onKeyPressFn","i","_this3","matchValues","search","caseSensitiveSearch","toLowerCase","toString","e","keyCode","disablePreSelectedValues","previousState","index","onRemove","splice","_this4","closeOnSelect","selectionLimit","onSelect","onSingleSelect","_this5","emptyRecordMsg","loadingMessage","loading","className","keys","map","obj","Fragment","option","isSelected","_this6","onClick","readOnly","checked","_this7","customCloseIcon","_this8","src","setTimeout","elem","offsetWidth","offsetHeight","getClientRects","element","getElementsByClassName","_this9","placeholder","id","name","hidePlaceholder","disable","showArrow","customArrow","onKeyDown","autoComplete","disabled","onMouseDown","preventDefault","renderOptionList","defaultProps","undefined"],"mappings":"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"}