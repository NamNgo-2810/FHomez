"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * Provides access to the `dtmf` resource.
 */
class DtmfResource {
  /**
   * The path to the `dtmf` resource.
   */
  static get PATH() {
    return "/v1/calls/{call_uuid}/dtmf";
  }
  /**
   * Creates a new DtmfResource.
   *
   * @param {Credentials} creds - Credentials used when interacting with the Vonage API.
   * @param {Object} options - additional options for the class.
   */


  constructor(creds, options) {
    this.creds = creds;
    this.options = options;
  }
  /**
   * Sends DTMF to a call.
   *
   * @param {Object} params - Parameters used when sending the dtmf to the call. See https://developer.nexmo.com/api/voice#dtmf for more information.
   * @param {function} callback - function to be called when the request completes.
   */


  send(callId, params, callback) {
    params = JSON.stringify(params);
    var config = {
      host: this.options.apiHost || "api.nexmo.com",
      path: DtmfResource.PATH.replace("{call_uuid}", callId),
      method: "PUT",
      body: params,
      headers: {
        "Content-Type": "application/json",
        "Content-Length": Buffer.byteLength(params),
        Authorization: "Bearer ".concat(this.creds.generateJwt())
      }
    };
    this.options.httpClient.request(config, callback);
  }

}

var _default = DtmfResource;
exports.default = _default;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9EdG1mUmVzb3VyY2UuanMiXSwibmFtZXMiOlsiRHRtZlJlc291cmNlIiwiUEFUSCIsImNvbnN0cnVjdG9yIiwiY3JlZHMiLCJvcHRpb25zIiwic2VuZCIsImNhbGxJZCIsInBhcmFtcyIsImNhbGxiYWNrIiwiSlNPTiIsInN0cmluZ2lmeSIsImNvbmZpZyIsImhvc3QiLCJhcGlIb3N0IiwicGF0aCIsInJlcGxhY2UiLCJtZXRob2QiLCJib2R5IiwiaGVhZGVycyIsIkJ1ZmZlciIsImJ5dGVMZW5ndGgiLCJBdXRob3JpemF0aW9uIiwiZ2VuZXJhdGVKd3QiLCJodHRwQ2xpZW50IiwicmVxdWVzdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBLE1BQU1BLFlBQU4sQ0FBbUI7QUFDakI7QUFDRjtBQUNBO0FBQ2lCLGFBQUpDLElBQUksR0FBRztBQUNoQixXQUFPLDRCQUFQO0FBQ0Q7QUFFRDtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNFQyxFQUFBQSxXQUFXLENBQUNDLEtBQUQsRUFBUUMsT0FBUixFQUFpQjtBQUMxQixTQUFLRCxLQUFMLEdBQWFBLEtBQWI7QUFDQSxTQUFLQyxPQUFMLEdBQWVBLE9BQWY7QUFDRDtBQUVEO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0VDLEVBQUFBLElBQUksQ0FBQ0MsTUFBRCxFQUFTQyxNQUFULEVBQWlCQyxRQUFqQixFQUEyQjtBQUM3QkQsSUFBQUEsTUFBTSxHQUFHRSxJQUFJLENBQUNDLFNBQUwsQ0FBZUgsTUFBZixDQUFUO0FBRUEsUUFBSUksTUFBTSxHQUFHO0FBQ1hDLE1BQUFBLElBQUksRUFBRSxLQUFLUixPQUFMLENBQWFTLE9BQWIsSUFBd0IsZUFEbkI7QUFFWEMsTUFBQUEsSUFBSSxFQUFFZCxZQUFZLENBQUNDLElBQWIsQ0FBa0JjLE9BQWxCLENBQTBCLGFBQTFCLEVBQXlDVCxNQUF6QyxDQUZLO0FBR1hVLE1BQUFBLE1BQU0sRUFBRSxLQUhHO0FBSVhDLE1BQUFBLElBQUksRUFBRVYsTUFKSztBQUtYVyxNQUFBQSxPQUFPLEVBQUU7QUFDUCx3QkFBZ0Isa0JBRFQ7QUFFUCwwQkFBa0JDLE1BQU0sQ0FBQ0MsVUFBUCxDQUFrQmIsTUFBbEIsQ0FGWDtBQUdQYyxRQUFBQSxhQUFhLG1CQUFZLEtBQUtsQixLQUFMLENBQVdtQixXQUFYLEVBQVo7QUFITjtBQUxFLEtBQWI7QUFXQSxTQUFLbEIsT0FBTCxDQUFhbUIsVUFBYixDQUF3QkMsT0FBeEIsQ0FBZ0NiLE1BQWhDLEVBQXdDSCxRQUF4QztBQUNEOztBQXhDZ0I7O2VBMkNKUixZIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBQcm92aWRlcyBhY2Nlc3MgdG8gdGhlIGBkdG1mYCByZXNvdXJjZS5cbiAqL1xuY2xhc3MgRHRtZlJlc291cmNlIHtcbiAgLyoqXG4gICAqIFRoZSBwYXRoIHRvIHRoZSBgZHRtZmAgcmVzb3VyY2UuXG4gICAqL1xuICBzdGF0aWMgZ2V0IFBBVEgoKSB7XG4gICAgcmV0dXJuIFwiL3YxL2NhbGxzL3tjYWxsX3V1aWR9L2R0bWZcIjtcbiAgfVxuXG4gIC8qKlxuICAgKiBDcmVhdGVzIGEgbmV3IER0bWZSZXNvdXJjZS5cbiAgICpcbiAgICogQHBhcmFtIHtDcmVkZW50aWFsc30gY3JlZHMgLSBDcmVkZW50aWFscyB1c2VkIHdoZW4gaW50ZXJhY3Rpbmcgd2l0aCB0aGUgVm9uYWdlIEFQSS5cbiAgICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnMgLSBhZGRpdGlvbmFsIG9wdGlvbnMgZm9yIHRoZSBjbGFzcy5cbiAgICovXG4gIGNvbnN0cnVjdG9yKGNyZWRzLCBvcHRpb25zKSB7XG4gICAgdGhpcy5jcmVkcyA9IGNyZWRzO1xuICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnM7XG4gIH1cblxuICAvKipcbiAgICogU2VuZHMgRFRNRiB0byBhIGNhbGwuXG4gICAqXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBwYXJhbXMgLSBQYXJhbWV0ZXJzIHVzZWQgd2hlbiBzZW5kaW5nIHRoZSBkdG1mIHRvIHRoZSBjYWxsLiBTZWUgaHR0cHM6Ly9kZXZlbG9wZXIubmV4bW8uY29tL2FwaS92b2ljZSNkdG1mIGZvciBtb3JlIGluZm9ybWF0aW9uLlxuICAgKiBAcGFyYW0ge2Z1bmN0aW9ufSBjYWxsYmFjayAtIGZ1bmN0aW9uIHRvIGJlIGNhbGxlZCB3aGVuIHRoZSByZXF1ZXN0IGNvbXBsZXRlcy5cbiAgICovXG4gIHNlbmQoY2FsbElkLCBwYXJhbXMsIGNhbGxiYWNrKSB7XG4gICAgcGFyYW1zID0gSlNPTi5zdHJpbmdpZnkocGFyYW1zKTtcblxuICAgIHZhciBjb25maWcgPSB7XG4gICAgICBob3N0OiB0aGlzLm9wdGlvbnMuYXBpSG9zdCB8fCBcImFwaS5uZXhtby5jb21cIixcbiAgICAgIHBhdGg6IER0bWZSZXNvdXJjZS5QQVRILnJlcGxhY2UoXCJ7Y2FsbF91dWlkfVwiLCBjYWxsSWQpLFxuICAgICAgbWV0aG9kOiBcIlBVVFwiLFxuICAgICAgYm9keTogcGFyYW1zLFxuICAgICAgaGVhZGVyczoge1xuICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICAgICAgXCJDb250ZW50LUxlbmd0aFwiOiBCdWZmZXIuYnl0ZUxlbmd0aChwYXJhbXMpLFxuICAgICAgICBBdXRob3JpemF0aW9uOiBgQmVhcmVyICR7dGhpcy5jcmVkcy5nZW5lcmF0ZUp3dCgpfWAsXG4gICAgICB9LFxuICAgIH07XG4gICAgdGhpcy5vcHRpb25zLmh0dHBDbGllbnQucmVxdWVzdChjb25maWcsIGNhbGxiYWNrKTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBEdG1mUmVzb3VyY2U7XG4iXX0=