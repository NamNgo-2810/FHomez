"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _index = _interopRequireDefault(require("./index"));

var _fs = _interopRequireDefault(require("fs"));

var _querystring = _interopRequireDefault(require("querystring"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

class Channel {
  static get PATH() {
    return "/v0.1/messages";
  }

  constructor(credentials, options) {
    this.creds = credentials;
    this.options = options; // Used to facilitate testing of the call to the underlying object

    this._nexmo = this.options.nexmoOverride || _index.default;

    this._nexmo.initialize(this.creds.apiKey, this.creds.apiSecret, this.options);
  }

  send(to, from, message, callback) {
    var params = {
      to: to,
      from: from,
      message: message
    };
    return this.options.api.post(Channel.PATH, params, callback, true, {
      "Content-Type": "application/json"
    });
  }

}

var _default = Channel;
exports.default = _default;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9DaGFubmVsLmpzIl0sIm5hbWVzIjpbIkNoYW5uZWwiLCJQQVRIIiwiY29uc3RydWN0b3IiLCJjcmVkZW50aWFscyIsIm9wdGlvbnMiLCJjcmVkcyIsIl9uZXhtbyIsIm5leG1vT3ZlcnJpZGUiLCJuZXhtbyIsImluaXRpYWxpemUiLCJhcGlLZXkiLCJhcGlTZWNyZXQiLCJzZW5kIiwidG8iLCJmcm9tIiwibWVzc2FnZSIsImNhbGxiYWNrIiwicGFyYW1zIiwiYXBpIiwicG9zdCJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7QUFFQTs7QUFDQTs7QUFDQTs7OztBQUVBLE1BQU1BLE9BQU4sQ0FBYztBQUNHLGFBQUpDLElBQUksR0FBRztBQUNoQixXQUFPLGdCQUFQO0FBQ0Q7O0FBRURDLEVBQUFBLFdBQVcsQ0FBQ0MsV0FBRCxFQUFjQyxPQUFkLEVBQXVCO0FBQ2hDLFNBQUtDLEtBQUwsR0FBYUYsV0FBYjtBQUNBLFNBQUtDLE9BQUwsR0FBZUEsT0FBZixDQUZnQyxDQUloQzs7QUFDQSxTQUFLRSxNQUFMLEdBQWMsS0FBS0YsT0FBTCxDQUFhRyxhQUFiLElBQThCQyxjQUE1Qzs7QUFFQSxTQUFLRixNQUFMLENBQVlHLFVBQVosQ0FDRSxLQUFLSixLQUFMLENBQVdLLE1BRGIsRUFFRSxLQUFLTCxLQUFMLENBQVdNLFNBRmIsRUFHRSxLQUFLUCxPQUhQO0FBS0Q7O0FBRURRLEVBQUFBLElBQUksQ0FBQ0MsRUFBRCxFQUFLQyxJQUFMLEVBQVdDLE9BQVgsRUFBb0JDLFFBQXBCLEVBQThCO0FBQ2hDLFFBQU1DLE1BQU0sR0FBRztBQUNiSixNQUFBQSxFQUFFLEVBQUVBLEVBRFM7QUFFYkMsTUFBQUEsSUFBSSxFQUFFQSxJQUZPO0FBR2JDLE1BQUFBLE9BQU8sRUFBRUE7QUFISSxLQUFmO0FBTUEsV0FBTyxLQUFLWCxPQUFMLENBQWFjLEdBQWIsQ0FBaUJDLElBQWpCLENBQXNCbkIsT0FBTyxDQUFDQyxJQUE5QixFQUFvQ2dCLE1BQXBDLEVBQTRDRCxRQUE1QyxFQUFzRCxJQUF0RCxFQUE0RDtBQUNqRSxzQkFBZ0I7QUFEaUQsS0FBNUQsQ0FBUDtBQUdEOztBQTdCVzs7ZUFnQ0NoQixPIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCBuZXhtbyBmcm9tIFwiLi9pbmRleFwiO1xuaW1wb3J0IGZzIGZyb20gXCJmc1wiO1xuaW1wb3J0IHF1ZXJ5c3RyaW5nIGZyb20gXCJxdWVyeXN0cmluZ1wiO1xuXG5jbGFzcyBDaGFubmVsIHtcbiAgc3RhdGljIGdldCBQQVRIKCkge1xuICAgIHJldHVybiBcIi92MC4xL21lc3NhZ2VzXCI7XG4gIH1cblxuICBjb25zdHJ1Y3RvcihjcmVkZW50aWFscywgb3B0aW9ucykge1xuICAgIHRoaXMuY3JlZHMgPSBjcmVkZW50aWFscztcbiAgICB0aGlzLm9wdGlvbnMgPSBvcHRpb25zO1xuXG4gICAgLy8gVXNlZCB0byBmYWNpbGl0YXRlIHRlc3Rpbmcgb2YgdGhlIGNhbGwgdG8gdGhlIHVuZGVybHlpbmcgb2JqZWN0XG4gICAgdGhpcy5fbmV4bW8gPSB0aGlzLm9wdGlvbnMubmV4bW9PdmVycmlkZSB8fCBuZXhtbztcblxuICAgIHRoaXMuX25leG1vLmluaXRpYWxpemUoXG4gICAgICB0aGlzLmNyZWRzLmFwaUtleSxcbiAgICAgIHRoaXMuY3JlZHMuYXBpU2VjcmV0LFxuICAgICAgdGhpcy5vcHRpb25zXG4gICAgKTtcbiAgfVxuXG4gIHNlbmQodG8sIGZyb20sIG1lc3NhZ2UsIGNhbGxiYWNrKSB7XG4gICAgY29uc3QgcGFyYW1zID0ge1xuICAgICAgdG86IHRvLFxuICAgICAgZnJvbTogZnJvbSxcbiAgICAgIG1lc3NhZ2U6IG1lc3NhZ2UsXG4gICAgfTtcblxuICAgIHJldHVybiB0aGlzLm9wdGlvbnMuYXBpLnBvc3QoQ2hhbm5lbC5QQVRILCBwYXJhbXMsIGNhbGxiYWNrLCB0cnVlLCB7XG4gICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICB9KTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBDaGFubmVsO1xuIl19