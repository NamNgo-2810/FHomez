"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _index = _interopRequireDefault(require("./index"));

var _Pricing = _interopRequireDefault(require("./Pricing"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

class Number {
  /**
   * @param {Credentials} credentials
   *    credentials to be used when interacting with the API.
   * @param {Object} options
   *    Addition Number options.
   */
  constructor(credentials) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    this.creds = credentials;
    this.options = options;
    this._pricing = new _Pricing.default(credentials, options); // Used to facilitate testing of the call to the underlying object

    this._vonage = this.options.vonageOverride || _index.default;

    this._vonage.initialize(this.creds.apiKey, this.creds.apiSecret, this.options);
  }
  /**
   * TODO: remove with next major release
   */


  getPricing() {
    this._pricing.get.apply(this, arguments);
  }
  /**
   * TODO: remove with next major release
   */


  getPhonePricing() {
    this._pricing.getPhone.apply(this, arguments);
  }
  /**
   * TODO: document
   */


  get() {
    this._vonage.getNumbers.apply(this._vonage, arguments);
  }
  /**
   * TODO: document
   */


  search() {
    this._vonage.searchNumbers.apply(this._vonage, arguments);
  }
  /**
   * TODO: document
   */


  buy() {
    this._vonage.buyNumber.apply(this._vonage, arguments);
  }
  /**
   * TODO: document
   */


  cancel() {
    this._vonage.cancelNumber.apply(this._vonage, arguments);
  }
  /**
   * TODO: document
   */


  update() {
    this._vonage.updateNumber.apply(this._vonage, arguments);
  }

}

var _default = Number;
exports.default = _default;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9OdW1iZXIuanMiXSwibmFtZXMiOlsiTnVtYmVyIiwiY29uc3RydWN0b3IiLCJjcmVkZW50aWFscyIsIm9wdGlvbnMiLCJjcmVkcyIsIl9wcmljaW5nIiwiUHJpY2luZyIsIl92b25hZ2UiLCJ2b25hZ2VPdmVycmlkZSIsInZvbmFnZSIsImluaXRpYWxpemUiLCJhcGlLZXkiLCJhcGlTZWNyZXQiLCJnZXRQcmljaW5nIiwiZ2V0IiwiYXBwbHkiLCJhcmd1bWVudHMiLCJnZXRQaG9uZVByaWNpbmciLCJnZXRQaG9uZSIsImdldE51bWJlcnMiLCJzZWFyY2giLCJzZWFyY2hOdW1iZXJzIiwiYnV5IiwiYnV5TnVtYmVyIiwiY2FuY2VsIiwiY2FuY2VsTnVtYmVyIiwidXBkYXRlIiwidXBkYXRlTnVtYmVyIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7OztBQUVBOztBQUVBOzs7O0FBRUEsTUFBTUEsTUFBTixDQUFhO0FBQ1g7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0VDLEVBQUFBLFdBQVcsQ0FBQ0MsV0FBRCxFQUE0QjtBQUFBLFFBQWRDLE9BQWMsdUVBQUosRUFBSTtBQUNyQyxTQUFLQyxLQUFMLEdBQWFGLFdBQWI7QUFDQSxTQUFLQyxPQUFMLEdBQWVBLE9BQWY7QUFFQSxTQUFLRSxRQUFMLEdBQWdCLElBQUlDLGdCQUFKLENBQVlKLFdBQVosRUFBeUJDLE9BQXpCLENBQWhCLENBSnFDLENBTXJDOztBQUNBLFNBQUtJLE9BQUwsR0FBZSxLQUFLSixPQUFMLENBQWFLLGNBQWIsSUFBK0JDLGNBQTlDOztBQUVBLFNBQUtGLE9BQUwsQ0FBYUcsVUFBYixDQUNFLEtBQUtOLEtBQUwsQ0FBV08sTUFEYixFQUVFLEtBQUtQLEtBQUwsQ0FBV1EsU0FGYixFQUdFLEtBQUtULE9BSFA7QUFLRDtBQUVEO0FBQ0Y7QUFDQTs7O0FBQ0VVLEVBQUFBLFVBQVUsR0FBRztBQUNYLFNBQUtSLFFBQUwsQ0FBY1MsR0FBZCxDQUFrQkMsS0FBbEIsQ0FBd0IsSUFBeEIsRUFBOEJDLFNBQTlCO0FBQ0Q7QUFFRDtBQUNGO0FBQ0E7OztBQUNFQyxFQUFBQSxlQUFlLEdBQUc7QUFDaEIsU0FBS1osUUFBTCxDQUFjYSxRQUFkLENBQXVCSCxLQUF2QixDQUE2QixJQUE3QixFQUFtQ0MsU0FBbkM7QUFDRDtBQUVEO0FBQ0Y7QUFDQTs7O0FBQ0VGLEVBQUFBLEdBQUcsR0FBRztBQUNKLFNBQUtQLE9BQUwsQ0FBYVksVUFBYixDQUF3QkosS0FBeEIsQ0FBOEIsS0FBS1IsT0FBbkMsRUFBNENTLFNBQTVDO0FBQ0Q7QUFFRDtBQUNGO0FBQ0E7OztBQUNFSSxFQUFBQSxNQUFNLEdBQUc7QUFDUCxTQUFLYixPQUFMLENBQWFjLGFBQWIsQ0FBMkJOLEtBQTNCLENBQWlDLEtBQUtSLE9BQXRDLEVBQStDUyxTQUEvQztBQUNEO0FBRUQ7QUFDRjtBQUNBOzs7QUFDRU0sRUFBQUEsR0FBRyxHQUFHO0FBQ0osU0FBS2YsT0FBTCxDQUFhZ0IsU0FBYixDQUF1QlIsS0FBdkIsQ0FBNkIsS0FBS1IsT0FBbEMsRUFBMkNTLFNBQTNDO0FBQ0Q7QUFFRDtBQUNGO0FBQ0E7OztBQUNFUSxFQUFBQSxNQUFNLEdBQUc7QUFDUCxTQUFLakIsT0FBTCxDQUFha0IsWUFBYixDQUEwQlYsS0FBMUIsQ0FBZ0MsS0FBS1IsT0FBckMsRUFBOENTLFNBQTlDO0FBQ0Q7QUFFRDtBQUNGO0FBQ0E7OztBQUNFVSxFQUFBQSxNQUFNLEdBQUc7QUFDUCxTQUFLbkIsT0FBTCxDQUFhb0IsWUFBYixDQUEwQlosS0FBMUIsQ0FBZ0MsS0FBS1IsT0FBckMsRUFBOENTLFNBQTlDO0FBQ0Q7O0FBdEVVOztlQXlFRWhCLE0iLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHZvbmFnZSBmcm9tIFwiLi9pbmRleFwiO1xuXG5pbXBvcnQgUHJpY2luZyBmcm9tIFwiLi9QcmljaW5nXCI7XG5cbmNsYXNzIE51bWJlciB7XG4gIC8qKlxuICAgKiBAcGFyYW0ge0NyZWRlbnRpYWxzfSBjcmVkZW50aWFsc1xuICAgKiAgICBjcmVkZW50aWFscyB0byBiZSB1c2VkIHdoZW4gaW50ZXJhY3Rpbmcgd2l0aCB0aGUgQVBJLlxuICAgKiBAcGFyYW0ge09iamVjdH0gb3B0aW9uc1xuICAgKiAgICBBZGRpdGlvbiBOdW1iZXIgb3B0aW9ucy5cbiAgICovXG4gIGNvbnN0cnVjdG9yKGNyZWRlbnRpYWxzLCBvcHRpb25zID0ge30pIHtcbiAgICB0aGlzLmNyZWRzID0gY3JlZGVudGlhbHM7XG4gICAgdGhpcy5vcHRpb25zID0gb3B0aW9ucztcblxuICAgIHRoaXMuX3ByaWNpbmcgPSBuZXcgUHJpY2luZyhjcmVkZW50aWFscywgb3B0aW9ucyk7XG5cbiAgICAvLyBVc2VkIHRvIGZhY2lsaXRhdGUgdGVzdGluZyBvZiB0aGUgY2FsbCB0byB0aGUgdW5kZXJseWluZyBvYmplY3RcbiAgICB0aGlzLl92b25hZ2UgPSB0aGlzLm9wdGlvbnMudm9uYWdlT3ZlcnJpZGUgfHwgdm9uYWdlO1xuXG4gICAgdGhpcy5fdm9uYWdlLmluaXRpYWxpemUoXG4gICAgICB0aGlzLmNyZWRzLmFwaUtleSxcbiAgICAgIHRoaXMuY3JlZHMuYXBpU2VjcmV0LFxuICAgICAgdGhpcy5vcHRpb25zXG4gICAgKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBUT0RPOiByZW1vdmUgd2l0aCBuZXh0IG1ham9yIHJlbGVhc2VcbiAgICovXG4gIGdldFByaWNpbmcoKSB7XG4gICAgdGhpcy5fcHJpY2luZy5nZXQuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBUT0RPOiByZW1vdmUgd2l0aCBuZXh0IG1ham9yIHJlbGVhc2VcbiAgICovXG4gIGdldFBob25lUHJpY2luZygpIHtcbiAgICB0aGlzLl9wcmljaW5nLmdldFBob25lLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gIH1cblxuICAvKipcbiAgICogVE9ETzogZG9jdW1lbnRcbiAgICovXG4gIGdldCgpIHtcbiAgICB0aGlzLl92b25hZ2UuZ2V0TnVtYmVycy5hcHBseSh0aGlzLl92b25hZ2UsIGFyZ3VtZW50cyk7XG4gIH1cblxuICAvKipcbiAgICogVE9ETzogZG9jdW1lbnRcbiAgICovXG4gIHNlYXJjaCgpIHtcbiAgICB0aGlzLl92b25hZ2Uuc2VhcmNoTnVtYmVycy5hcHBseSh0aGlzLl92b25hZ2UsIGFyZ3VtZW50cyk7XG4gIH1cblxuICAvKipcbiAgICogVE9ETzogZG9jdW1lbnRcbiAgICovXG4gIGJ1eSgpIHtcbiAgICB0aGlzLl92b25hZ2UuYnV5TnVtYmVyLmFwcGx5KHRoaXMuX3ZvbmFnZSwgYXJndW1lbnRzKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBUT0RPOiBkb2N1bWVudFxuICAgKi9cbiAgY2FuY2VsKCkge1xuICAgIHRoaXMuX3ZvbmFnZS5jYW5jZWxOdW1iZXIuYXBwbHkodGhpcy5fdm9uYWdlLCBhcmd1bWVudHMpO1xuICB9XG5cbiAgLyoqXG4gICAqIFRPRE86IGRvY3VtZW50XG4gICAqL1xuICB1cGRhdGUoKSB7XG4gICAgdGhpcy5fdm9uYWdlLnVwZGF0ZU51bWJlci5hcHBseSh0aGlzLl92b25hZ2UsIGFyZ3VtZW50cyk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgTnVtYmVyO1xuIl19